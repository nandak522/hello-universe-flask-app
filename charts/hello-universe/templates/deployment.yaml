{{- $environment := .Values.environment -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  strategy:
    rollingUpdate:
      {{- toYaml .Values.rollingUpdate | nindent 6 }}
    type: RollingUpdate
  selector:
    matchLabels:
      name: {{ .Values.name }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
      {{- if and (eq .Values.environment "prod") (.Values.affinity) }}
      {{- include "app.affinity" .Values.affinity | trim | nindent 6 }}
      {{- end }}
      containers:
      {{- range .Values.containers }}
        - livenessProbe:
            tcpSocket:
              port: {{ .port }}
            periodSeconds: 5
          name: {{ .name }}
          envFrom:
          - configMapRef:
              name: {{ .configMapName }}
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /
              port: {{ .port }}
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          image: {{ .imageName }}:{{- .imageTag }}
          ports:
            - protocol: TCP
              name: {{ .portName }}
              containerPort: {{ .port }}
          resources:
          {{- toYaml .resources | nindent 12 }}
      {{- end }}
